/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */pre,textarea{overflow:auto}img,textarea{vertical-align:top}:focus,a:active,a:hover{outline:0}a,a:focus,a:hover{text-decoration:none}#wrapper,sub,sup{position:relative}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;box-sizing:border-box}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}abbr[title]{border-bottom:1px dotted}b,optgroup,strong{font-weight:700}dfn{font-style:italic}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0;max-width:100%;height:auto}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver}legend{border:0;padding:0}textarea{resize:vertical}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}.clearfix:after{content:'';display:block;clear:both}.hidden{display:none}.text-center{text-align:center}.text-left{text-align:left}.text-right{text-align:right}.pull-left{float:left!important}.pull-right{float:right!important}.ellipsis{white-space:nowrap;text-overflow:ellipsis;overflow:hidden}*,:after,:before{box-sizing:inherit}*{max-height:1000000px}body{margin:0;color:#333;background:#fff;font:16px/1.2 Poppins Arial,"Helvetica Neue",Helvetica,sans-serif;min-width:320px;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.gm-style img{max-width:none}li{list-style:none}.h,.h1,.h2,.h3,.h4,.h5,.h6,h1,h2,h3,h4,h5,h6{font-family:inherit;font-weight:700;margin:0 0 .5em;color:inherit}.h1,h1{font-size:70px}.h2,h2{font-size:27px}.h3,h3{font-size:24px}.h4,h4{font-size:40px}.h5,h5{font-size:17px}.h6,h6{font-size:15px}p{margin:0 0 1em}a{color:#39f}fieldset,form{margin:0;padding:0;border-style:none}input[type=text],input[type=tel],input[type=email],input[type=search],input[type=password],textarea{-webkit-appearance:none;-webkit-border-radius:0;box-sizing:border-box;border:1px solid #999;padding:.4em .7em}input[type=text]:focus,input[type=tel]:focus,input[type=email]:focus,input[type=search]:focus,input[type=password]:focus,textarea:focus{border-color:#333}input[type=text]::-webkit-input-placeholder,input[type=tel]::-webkit-input-placeholder,input[type=email]::-webkit-input-placeholder,input[type=search]::-webkit-input-placeholder,input[type=password]::-webkit-input-placeholder,textarea::-webkit-input-placeholder{color:#999}input[type=text]::-moz-placeholder,input[type=tel]::-moz-placeholder,input[type=email]::-moz-placeholder,input[type=search]::-moz-placeholder,input[type=password]::-moz-placeholder,textarea::-moz-placeholder{opacity:1;color:#999}input[type=text]:-moz-placeholder,input[type=tel]:-moz-placeholder,input[type=email]:-moz-placeholder,input[type=search]:-moz-placeholder,input[type=password]:-moz-placeholder,textarea:-moz-placeholder{color:#999}input[type=text]:-ms-input-placeholder,input[type=tel]:-ms-input-placeholder,input[type=email]:-ms-input-placeholder,input[type=search]:-ms-input-placeholder,input[type=password]:-ms-input-placeholder,textarea:-ms-input-placeholder{color:#999}input[type=text].placeholder,input[type=tel].placeholder,input[type=email].placeholder,input[type=search].placeholder,input[type=password].placeholder,textarea.placeholder{color:#999}select{-webkit-border-radius:0}button,input[type=button],input[type=reset],input[type=file],input[type=submit]{-webkit-appearance:none;-webkit-border-radius:0;cursor:pointer}#wrapper{overflow:hidden;flex-grow:1;padding:85px 0 0}.container{padding:0 15px;margin:0 auto;max-width:1612px}#header .container,#header .container .img-logo{display:flex;align-items:center}#header .container .img-logo img{height:53px;width:45px}#header .container .img-logo .logo{margin-left:14px;font-weight:800;font-size:35px;line-height:52px;color:#58a9a5}@media (max-width:1023px){#header{padding:12px 0}#header .container .img-logo img{height:35px;width:27px}#header .container .img-logo .logo{font-size:18px;line-height:24px}}#header .container .nav-opener{width:36px;height:36px;position:relative;border-radius:3px;text-indent:-9999px;overflow:hidden;margin:6px 0 4px 14px}@media (min-width:1025px){#header .container .nav-opener{display:none}}#header .container .nav-opener span,#header .container .nav-opener:after,#header .container .nav-opener:before{background:#333;border-radius:4px;position:absolute;top:16px;left:10%;right:10%;height:3px;margin-top:-2px;transition:all .2s linear}#header .container .nav-opener:after,#header .container .nav-opener:before{content:"";width:36px;top:10px}#header .container .nav-opener:after{top:22px}#header .container .nav-opener span{width:36px}#header .container nav{transition:.3s all}@media (max-width:1023px){#header .container nav{position:absolute;z-index:2;top:0;background:#FFF;height:100vh;width:100%}}#header .container nav .menu{list-style:none;margin:0 0 0 309px;padding:0;width:660px;display:flex;justify-content:space-between}@media (max-width:1023px){#header .container nav .menu{display:block;padding:20px;font-size:15px;margin-left:0;margin-top:30px}#header .container nav .menu li{margin:0 0 20px}}#header .container nav .menu li a{color:#404242;font-weight:400;font-size:25px;line-height:38px;position:relative}#header .container nav .menu li a:hover{font-weight:700;transition:color .3s;color:#58a9a5}#header .container nav .menu li a:hover::before{content:"";position:absolute;left:calc((100% - 48px)/ 2);bottom:-6px;width:48px;height:6px;border-radius:21px;background:#fec62d}#header .btn{width:271px;height:80px;background:#58a9a5;border-radius:15px;color:#fff;font-weight:500;font-size:25px;line-height:38px;padding:21px 87px 21px 88px;margin-left:auto}@media (max-width:1024px){#header .container nav{right:-200vw}#header .btn{width:180px;height:40px;font-weight:500;font-size:18px;line-height:38px;padding:3px 50px}}body.nav-active nav{right:0!important}body.nav-active .nav-opener{z-index:2}body.nav-active .nav-opener span{opacity:0}body.nav-active .nav-opener:after,body.nav-active .nav-opener:before{-webkit-transform:rotate(45deg);transform:rotate(45deg);top:16px!important;left:15%;right:15%}body.nav-active .nav-opener:after{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.get_the_inspiration_section{margin-top:153px;color:#1c2323}.get_the_inspiration_section .container .two-columns{display:flex}.get_the_inspiration_section .container .two-columns .col-left h1{width:674px;font-weight:800;line-height:105px;color:#1c2323;margin-bottom:50px}@media (max-width:1023px){.get_the_inspiration_section{margin-top:40px}.get_the_inspiration_section .container .two-columns{flex-wrap:wrap-reverse}.get_the_inspiration_section .container .two-columns .col-left h1{width:370px;font-size:45px;line-height:45px}}.get_the_inspiration_section .container .two-columns .col-left p{font-weight:400;font-size:30px;line-height:45px;color:#404242;width:735px;margin-bottom:70px}.get_the_inspiration_section .container .two-columns .col-left .btn{color:#fff;font-weight:700;font-size:25px;line-height:38px;background:#58a9a5;border-radius:20px 20px 20px 0;padding:21px 83px 21px 90px}.get_the_inspiration_section .container .two-columns .col-right{position:relative;margin-left:71px}@media (max-width:1023px){.get_the_inspiration_section .container .two-columns .col-left p{width:unset}.get_the_inspiration_section .container .two-columns .col-right{margin:0 0 15px}.how_it_works_section .container h1{font-size:45px}}.get_the_inspiration_section .container .two-columns .col-right .rectangle{position:absolute;z-index:-1}.get_the_inspiration_section .container .two-columns .col-right .interior{z-index:0}.how_it_works_section{margin-top:120px}.how_it_works_section .container h1{font-weight:800;line-height:105px;color:#1c2323;text-align:center}.how_it_works_section .container p{text-align:center;font-weight:400;font-size:30px;line-height:45px;color:#404242}.how_it_works_section .container .two-columns{display:flex;position:relative}.how_it_works_section .container .two-columns .button-play{position:absolute;left:986px;top:196px;background:#fff;box-shadow:0 0 0 14px rgba(255,255,255,.4);border-radius:65px;width:100px;height:100px}.how_it_works_section .container .two-columns .button-play img{margin-top:29px;margin-left:43px}@media (max-width:1023px){.how_it_works_section .container .two-columns{flex-wrap:wrap}.how_it_works_section .container .two-columns .button-play{left:unset;right:0;top:10px}.how_it_works_section .container .two-columns .col-right{width:100%}}.how_it_works_section .container .two-columns .col-right .title-box{background:#ccf0e6;border-radius:0 10px 10px 0;color:#486958;padding:70px 106px 80px 115px;width:549px}.how_it_works_section .container .two-columns .col-right .title-box p{font-weight:500;font-size:20px;line-height:30px;margin-bottom:41px;text-align:left;color:#486958}.how_it_works_section .container .two-columns .col-right .title-box span{font-weight:700;font-size:20px;line-height:30px;color:#486958}.our_mission_section{margin-top:150px;color:#1c2323}.our_mission_section .container .two-columns{display:flex}.our_mission_section .container .two-columns .col-right{margin-left:142px}@media (max-width:1023px){.how_it_works_section .container .two-columns .col-right .title-box{padding:15px 10px;width:100%}.our_mission_section .container .two-columns{flex-wrap:wrap}.our_mission_section .container .two-columns .col-right{margin:10px}}.our_mission_section .container .two-columns .col-right p{margin-left:3px;font-weight:700;font-size:40px;line-height:60px;color:#1c2323;margin-bottom:50px}@media (max-width:1023px){.our_mission_section .container .two-columns .col-right p{font-size:35px;line-height:50px}}.our_mission_section .container .two-columns .col-right .description{margin-left:0;font-weight:500;font-size:30px;line-height:45px;color:#486958}.our_project_section{margin-top:120px}.our_project_section .container h1{font-weight:800;line-height:105px;color:#1c2323;text-align:center;margin-bottom:20px}@media (max-width:1023px){.our_project_section{margin-top:20px}.our_project_section .container h1{font-size:45px}}.our_project_section .container p{font-weight:400;font-size:30px;line-height:45px;color:#404242;text-align:center;margin-bottom:51px}.our_project_section .container .divider{margin:0 auto;border-top:5px solid #58a9a5;width:135px;position:relative}.our_project_section .container .divider::after{content:"";position:absolute;width:135px;border-top:5px solid #58a9a5;top:10px}.our_project_section .container .three-columns{display:flex;justify-content:space-between;margin-top:104px;flex-wrap:wrap}.our_project_section .container .three-columns .col{width:450px}@media (max-width:1023px){.our_project_section .container .three-columns .col{width:370px;margin-top:35px}}.our_project_section .container .three-columns .col:nth-child(2) h4{margin-top:35px}.our_project_section .container .three-columns .col h4{font-weight:700;line-height:60px;color:#58a9a5;margin-bottom:5px}.our_project_section .container .three-columns .col p{font-weight:500;font-size:19px;line-height:30px;color:#486958;text-align:left;margin-bottom:35px}.testimonial-section{margin-top:250px}.testimonial-section .container h1{font-weight:800;text-align:center;line-height:105px;color:#1c2323;margin-bottom:0}@media (max-width:1023px){.testimonial-section{margin-top:60px}.testimonial-section .container h1{font-size:45px}.testimonial-section .container .img-column .img-box img{width:150px}}.testimonial-section .container .img-column{max-width:1242px;display:flex;justify-content:space-between;flex-wrap:wrap;align-items:center;margin:20px auto 62px}.testimonial-section .two-columns{display:flex}.testimonial-section .two-columns .col-left .rectangle{width:615px;height:700px}@media (max-width:1023px){.testimonial-section .two-columns{flex-wrap:wrap}.testimonial-section .two-columns .col-left .rectangle{width:unset;height:unset}}.testimonial-section .two-columns .col-right{width:997px;height:700px}.testimonial-section .two-columns .col-right .title-box{background:#ccf0e6;color:#58a9a5}.testimonial-section .two-columns .col-right .title-box .description-columns{display:flex;justify-content:space-between;margin:0 135px 123px}@media (max-width:1023px){.testimonial-section .two-columns .col-right{width:unset;height:unset}.testimonial-section .two-columns .col-right .title-box .description-columns{margin:0;flex-wrap:wrap;justify-content:center}}.testimonial-section .two-columns .col-right .title-box .description-columns .col{width:119px}.testimonial-section .two-columns .col-right .title-box .description-columns .col p{font-weight:600;font-size:30px;line-height:30px;text-align:left}@media (max-width:1023px){.testimonial-section .two-columns .col-right .title-box .description-columns .col{width:300px}.testimonial-section .two-columns .col-right .title-box .description-columns .col p{margin:0}}.testimonial-section .two-columns .col-right .title-box .description-columns .col .number{color:#58a9a5;font-weight:800;line-height:105px;margin-top:50px;text-align:left}.testimonial-section .two-columns .col-right .title-box .title-blockquote{padding-left:138px;padding-right:107px;padding-bottom:37px;position:relative}.testimonial-section .two-columns .col-right .title-box .title-blockquote .guote{position:absolute;left:97px;top:-52px;z-index:2}.testimonial-section .two-columns .col-right .title-box .title-blockquote blockquote{width:752px;position:relative;z-index:2;margin-left:0;color:#486958;font-weight:500;font-size:25px;line-height:38px}@media (max-width:1023px){.testimonial-section .two-columns .col-right .title-box .description-columns .col .number{margin:0}.testimonial-section .two-columns .col-right .title-box .title-blockquote .guote{left:5px;top:-20px}.testimonial-section .two-columns .col-right .title-box .title-blockquote{margin:0;padding:0}.testimonial-section .two-columns .col-right .title-box .title-blockquote blockquote{width:unset;padding:20px}}.testimonial-section .two-columns .col-right .title-box .title-blockquote .roscoe{margin-top:50px;font-size:26px;color:#58a9a5}.contact_us_section{margin-top:240px;color:#1c2323}.contact_us_section .container .two-columns{display:flex}.contact_us_section .container .two-columns .col-left .title h1{font-weight:800;font-size:70px;line-height:105px;color:#1c2323;margin-bottom:10px}@media (max-width:1023px){.contact_us_section{margin-top:20px}.contact_us_section .container .two-columns{flex-wrap:wrap;margin-top:20px}.contact_us_section .container .two-columns .col-left .title h1{font-size:40px}}.contact_us_section .container .two-columns .col-left .title p{font-weight:500;font-size:25px;line-height:38px;color:#486958}.contact_us_section .container .two-columns .col-left .title .divider{margin:0 auto 0 2px;border-top:5px solid #58a9a5;width:135px;position:relative}.contact_us_section .container .two-columns .col-left .title .divider::after{content:"";position:absolute;width:135px;border-top:5px solid #58a9a5;top:10px}@media (max-width:1023px){.contact_us_section .container .two-columns .col-left .title .divider{margin:0 auto 40px}.contact_us_section .container .two-columns .col-left .title .divider::after{margin-top:0}.contact_us_section .container .two-columns .col-right{width:100%}}.contact_us_section .container .two-columns .col-right .box-description{margin-left:67px;background:#fff;border:1px solid #486958;padding:57px 54px 35px}@media (max-width:1023px){.contact_us_section .container .two-columns .col-right .box-description{padding:20px;margin:0;width:100%}}.contact_us_section .container .two-columns .col-right .box-description .register-form .form-row{position:relative;margin:0 0 57px}.contact_us_section .container .two-columns .col-right .box-description .register-form .form-row .row-2{margin-bottom:0}.contact_us_section .container .two-columns .col-right .box-description .register-form .form-row input{border:1px solid #000;width:100%;width:1000px;border-top:0;border-left:0;border-right:0;padding:25px}.contact_us_section .container .two-columns .col-right .box-description .register-form .form-row.active label{top:-15px;font-size:16px;-webkit-transform:translate(0);transform:translate(0)}.contact_us_section .container .two-columns .col-right .box-description .register-form .form-row label{font-weight:500;font-size:25px;line-height:38px;color:#486958;top:40%;-webkit-transform:translateY(-50%);transform:translateY(-50%);transition:all .3s;position:absolute}@media (max-width:1023px){.contact_us_section .container .two-columns .col-right .box-description .register-form .form-row input{width:100%}.contact_us_section .container .two-columns .col-right .box-description .register-form .form-row label{font-size:18px;line-height:38px}}.contact_us_section .container .two-columns .col-right .box-description .title-row{padding-top:37px;padding-bottom:35px}.contact_us_section .container .two-columns .col-right .box-description .title-row .description{font-weight:500;font-size:25px;line-height:38px;color:#486958;margin-bottom:0}.contact_us_section .container .two-columns .col-right .box-description .title-row .btn{color:#fff;font-weight:700;font-size:25px;line-height:38px;background:#58a9a5;border-radius:20px 20px 20px 0;padding:21px 73px;float:right;margin-top:-43px}body{display:flex;flex-direction:column;justify-content:space-between;min-height:100vh;font-family:Poppins,sans-serif}@media (max-width:1023px){.contact_us_section .container .two-columns .col-right .box-description .title-row .btn{font-size:25px;line-height:38px;padding:7px 40px}body{font-size:14px}}@media (max-width:319px){body{font-size:13px}}@media (max-width:1024px){body #wrapper{padding:30px 0 0}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
