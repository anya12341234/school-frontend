function initAnchors(){new SmoothScroll({anchorLinks:".btn-back",extraOffset:0,wheelBehavior:"none"})}jQuery(function(){initAnchors()}),function(l,t){var o,s,a,c=l(window),r="onwheel"in document||9<=document.documentMode?"wheel":"mousewheel DOMMouseScroll";function i(t,e,n){var i;document.body&&(e="number"==typeof e?{duration:e}:e||{},o=o||l("html, body"),i=e.container||o,"number"==typeof t&&(t={top:t}),s&&a&&s.off(r,a),e.wheelBehavior&&"none"!==e.wheelBehavior&&(a=function(t){"stop"===e.wheelBehavior?(i.off(r,a),i.stop()):"ignore"===e.wheelBehavior&&t.preventDefault()},s=i.on(r,a)),i.stop().animate({scrollLeft:t.left,scrollTop:t.top},e.duration,function(){a&&i.off(r,a),l.isFunction(n)&&n()}))}function e(t){this.options=l.extend({anchorLinks:'a[href^="#"]',container:null,extraOffset:null,activeClasses:null,easing:"swing",animMode:"duration",animDuration:800,animSpeed:1500,anchorActiveClass:"anchor-active",sectionActiveClass:"section-active",wheelBehavior:"stop",useNativeAnchorScrolling:!1},t),this.init()}e.prototype={init:function(){this.initStructure(),this.attachEvents(),this.isInit=!0},initStructure:function(){var t=this;this.container=this.options.container?l(this.options.container):l("html,body"),this.scrollContainer=this.options.container?this.container:c,this.anchorLinks=jQuery(this.options.anchorLinks).filter(function(){return jQuery(t.getAnchorTarget(jQuery(this))).length})},getId:function(t){try{return"#"+t.replace(/^.*?(#|$)/,"")}catch(t){return null}},getAnchorTarget:function(t){t=this.getId(l(t).attr("href"));return l(1<t.length?t:"html")},getTargetOffset:function(t){var e=t.offset().top;return this.options.container&&(e-=this.container.offset().top-this.container.prop("scrollTop")),"number"==typeof this.options.extraOffset?e-=this.options.extraOffset:"function"==typeof this.options.extraOffset&&(e-=this.options.extraOffset(t)),{top:e}},attachEvents:function(){var e=this;if(this.options.activeClasses&&this.anchorLinks.length){this.anchorData=[];for(var t=0;t<this.anchorLinks.length;t++){var n=jQuery(this.anchorLinks[t]),i=e.getAnchorTarget(n),o=null;l.each(e.anchorData,function(t,e){e.block[0]===i[0]&&(o=e)}),o?o.link=o.link.add(n):e.anchorData.push({link:n,block:i})}this.resizeHandler=function(){e.isInit&&e.recalculateOffsets()},this.scrollHandler=function(){e.refreshActiveClass()},this.recalculateOffsets(),this.scrollContainer.on("scroll",this.scrollHandler),c.on("resize load orientationchange refreshAnchor",this.resizeHandler)}this.clickHandler=function(t){e.onClick(t)},this.options.useNativeAnchorScrolling||this.anchorLinks.on("click",this.clickHandler)},recalculateOffsets:function(){var n=this;l.each(this.anchorData,function(t,e){e.offset=n.getTargetOffset(e.block),e.height=e.block.outerHeight()}),this.refreshActiveClass()},toggleActiveClass:function(t,e,n){t.toggleClass(this.options.anchorActiveClass,n),e.toggleClass(this.options.sectionActiveClass,n)},refreshActiveClass:function(){var i=this,o=!1,s=this.container.prop("scrollHeight"),a=this.scrollContainer.height(),r=this.options.container?this.container.prop("scrollTop"):c.scrollTop();this.options.customScrollHandler?this.options.customScrollHandler.call(this,r,this.anchorData):(this.anchorData.sort(function(t,e){return t.offset.top-e.offset.top}),l.each(this.anchorData,function(t){var t=i.anchorData.length-t-1,e=i.anchorData[t],n="parent"===i.options.activeClasses?e.link.parent():e.link;s-a<=r?t==i.anchorData.length-1?i.toggleActiveClass(n,e.block,!0):i.toggleActiveClass(n,e.block,!1):!o&&(r>=e.offset.top-1||0==t)?(o=!0,i.toggleActiveClass(n,e.block,!0)):i.toggleActiveClass(n,e.block,!1)}))},calculateScrollDuration:function(t){return"speed"===this.options.animMode?Math.abs(this.scrollContainer.scrollTop()-t.top)/this.options.animSpeed*1e3:this.options.animDuration},onClick:function(t){var e=this.getAnchorTarget(t.currentTarget),e=this.getTargetOffset(e);t.preventDefault(),i(e,{container:this.container,wheelBehavior:this.options.wheelBehavior,duration:this.calculateScrollDuration(e)}),this.makeCallback("onBeforeScroll",t.currentTarget)},makeCallback:function(t){var e;"function"==typeof this.options[t]&&((e=Array.prototype.slice.call(arguments)).shift(),this.options[t].apply(this,e))},destroy:function(){var n=this;this.isInit=!1,this.options.activeClasses&&(c.off("resize load orientationchange refreshAnchor",this.resizeHandler),this.scrollContainer.off("scroll",this.scrollHandler),l.each(this.anchorData,function(t){var t=n.anchorData.length-t-1,t=n.anchorData[t],e="parent"===n.options.activeClasses?t.link.parent():t.link;n.toggleActiveClass(e,t.block,!1)})),this.anchorLinks.off("click",this.clickHandler)}},l.extend(e,{scrollTo:function(t,e,n){i(t,e,n)}}),t.SmoothScroll=e}(jQuery,this),$(function(){$(".nav-opener").on("click",function(t){t.preventDefault(),$("body").toggleClass("nav-active")})}),$(function(){var t=$("body");$(window).scroll(function(){0<$(window).scrollTop()?t.addClass("scroll"):t.removeClass("scroll")})}),function(t,e){"function"==typeof define&&define.amd?define(["module","exports"],e):"undefined"!=typeof exports?e(module,exports):(e(e={exports:{}},e.exports),t.WOW=e.exports)}(this,function(t,e){"use strict";function n(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function o(t,e){return 0<=e.indexOf(t)}function i(t,e,n){null!=t.addEventListener?t.addEventListener(e,n,!1):null!=t.attachEvent?t.attachEvent("on"+e,n):t[e]=n}function s(t,e,n){null!=t.removeEventListener?t.removeEventListener(e,n,!1):null!=t.detachEvent?t.detachEvent("on"+e,n):delete t[e]}Object.defineProperty(e,"__esModule",{value:!0});var a=function(t,e,n){return e&&d(t.prototype,e),n&&d(t,n),t},r=window.WeakMap||window.MozWeakMap||(a(f,[{key:"get",value:function(t){for(var e=0;e<this.keys.length;e++)if(this.keys[e]===t)return this.values[e]}},{key:"set",value:function(t,e){for(var n=0;n<this.keys.length;n++)if(this.keys[n]===t)return this.values[n]=e,this;return this.keys.push(t),this.values.push(e),this}}]),f),l=window.MutationObserver||window.WebkitMutationObserver||window.MozMutationObserver||(a(u,[{key:"observe",value:function(){}}]),u.notSupported=!0,u),c=window.getComputedStyle||function(n){var i=/(\-([a-z]){1})/g;return{getPropertyValue:function(t){i.test(t="float"===t?"styleFloat":t)&&t.replace(i,function(t,e){return e.toUpperCase()});var e=n.currentStyle;return(null!=e?e[t]:void 0)||null}}},a=(a(h,[{key:"init",value:function(){this.element=window.document.documentElement,o(document.readyState,["interactive","complete"])?this.start():i(document,"DOMContentLoaded",this.start),this.finished=[]}},{key:"start",value:function(){var s=this;if(this.stopped=!1,this.boxes=[].slice.call(this.element.querySelectorAll("."+this.config.boxClass)),this.all=this.boxes.slice(0),this.boxes.length)if(this.disabled())this.resetStyle();else for(var t=0;t<this.boxes.length;t++){var e=this.boxes[t];this.applyStyle(e,!0)}this.disabled()||(i(this.config.scrollContainer||window,"scroll",this.scrollHandler),i(window,"resize",this.scrollHandler),this.interval=setInterval(this.scrollCallback,50)),this.config.live&&new l(function(t){for(var e=0;e<t.length;e++)for(var n=t[e],i=0;i<n.addedNodes.length;i++){var o=n.addedNodes[i];s.doSync(o)}}).observe(document.body,{childList:!0,subtree:!0})}},{key:"stop",value:function(){this.stopped=!0,s(this.config.scrollContainer||window,"scroll",this.scrollHandler),s(window,"resize",this.scrollHandler),null!=this.interval&&clearInterval(this.interval)}},{key:"sync",value:function(){l.notSupported&&this.doSync(this.element)}},{key:"doSync",value:function(t){if(1===(t=null==t?this.element:t).nodeType)for(var e=(t=t.parentNode||t).querySelectorAll("."+this.config.boxClass),n=0;n<e.length;n++){var i=e[n];o(i,this.all)||(this.boxes.push(i),this.all.push(i),this.stopped||this.disabled()?this.resetStyle():this.applyStyle(i,!0),this.scrolled=!0)}}},{key:"show",value:function(t){return this.applyStyle(t),t.className=t.className+" "+this.config.animateClass,null!=this.config.callback&&this.config.callback(t),e=t,n=this.wowEvent,null!=e.dispatchEvent?e.dispatchEvent(n):n in(null!=e)?e[n]():"on"+n in(null!=e)&&e["on"+n](),this.config.resetAnimation&&(i(t,"animationend",this.resetAnimation),i(t,"oanimationend",this.resetAnimation),i(t,"webkitAnimationEnd",this.resetAnimation),i(t,"MSAnimationEnd",this.resetAnimation)),t;var e,n}},{key:"applyStyle",value:function(t,e){var n=this,i=t.getAttribute("data-wow-duration"),o=t.getAttribute("data-wow-delay"),s=t.getAttribute("data-wow-iteration");return this.animate(function(){return n.customStyle(t,e,i,o,s)})}},{key:"resetStyle",value:function(){for(var t=0;t<this.boxes.length;t++)this.boxes[t].style.visibility="visible"}},{key:"resetAnimation",value:function(t){0<=t.type.toLowerCase().indexOf("animationend")&&((t=t.target||t.srcElement).className=t.className.replace(this.config.animateClass,"").trim())}},{key:"customStyle",value:function(t,e,n,i,o){return e&&this.cacheAnimationName(t),t.style.visibility=e?"hidden":"visible",n&&this.vendorSet(t.style,{animationDuration:n}),i&&this.vendorSet(t.style,{animationDelay:i}),o&&this.vendorSet(t.style,{animationIterationCount:o}),this.vendorSet(t.style,{animationName:e?"none":this.cachedAnimationName(t)}),t}},{key:"vendorSet",value:function(t,e){for(var n in e)if(e.hasOwnProperty(n)){var i=e[n];t[""+n]=i;for(var o=0;o<this.vendors.length;o++)t[""+this.vendors[o]+n.charAt(0).toUpperCase()+n.substr(1)]=i}}},{key:"vendorCSS",value:function(t,e){for(var n=c(t),i=n.getPropertyCSSValue(e),o=0;o<this.vendors.length;o++)var s=this.vendors[o],i=i||n.getPropertyCSSValue("-"+s+"-"+e);return i}},{key:"animationName",value:function(e){var n=void 0;try{n=this.vendorCSS(e,"animation-name").cssText}catch(t){n=c(e).getPropertyValue("animation-name")}return"none"===n?"":n}},{key:"cacheAnimationName",value:function(t){return this.animationNameCache.set(t,this.animationName(t))}},{key:"cachedAnimationName",value:function(t){return this.animationNameCache.get(t)}},{key:"scrollHandler",value:function(){this.scrolled=!0}},{key:"scrollCallback",value:function(){if(this.scrolled){this.scrolled=!1;for(var t=[],e=0;e<this.boxes.length;e++){var n=this.boxes[e];n&&(this.isVisible(n)?this.show(n):t.push(n))}this.boxes=t,this.boxes.length||this.config.live||this.stop()}}},{key:"offsetTop",value:function(t){for(;void 0===t.offsetTop;)t=t.parentNode;for(var e=t.offsetTop;t.offsetParent;)e+=(t=t.offsetParent).offsetTop;return e}},{key:"isVisible",value:function(t){var e=t.getAttribute("data-wow-offset")||this.config.offset,n=this.config.scrollContainer&&this.config.scrollContainer.scrollTop||window.pageYOffset,e=n+Math.min(this.element.clientHeight,"innerHeight"in window?window.innerHeight:document.documentElement.clientHeight)-e,i=this.offsetTop(t),t=i+t.clientHeight;return i<=e&&n<=t}},{key:"disabled",value:function(){return!this.config.mobile&&/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)}}]),h);function h(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];n(this,h),this.defaults={boxClass:"wow",animateClass:"animated",offset:0,mobile:!0,live:!0,callback:null,scrollContainer:null,resetAnimation:!0},this.animate="requestAnimationFrame"in window?function(t){return window.requestAnimationFrame(t)}:function(t){return t()},this.vendors=["moz","webkit"],this.start=this.start.bind(this),this.resetAnimation=this.resetAnimation.bind(this),this.scrollHandler=this.scrollHandler.bind(this),this.scrollCallback=this.scrollCallback.bind(this),this.scrolled=!0,this.config=function(t,e){for(var n in e){var i;null==t[n]&&(i=e[n],t[n]=i)}return t}(t,this.defaults),null!=t.scrollContainer&&(this.config.scrollContainer=document.querySelector(t.scrollContainer)),this.animationNameCache=new r,this.wowEvent=function(t,e,n,i){var e=!(arguments.length<=1||void 0===e)&&e,n=!(arguments.length<=2||void 0===n)&&n,i=arguments.length<=3||void 0===i?null:i,o=void 0;return null!=document.createEvent?(o=document.createEvent("CustomEvent")).initCustomEvent(t,e,n,i):null!=document.createEventObject?(o=document.createEventObject()).eventType=t:o.eventName=t,o}(this.config.boxClass)}function u(){n(this,u),"undefined"!=typeof console&&null!==console&&(console.warn("MutationObserver is not supported by your browser."),console.warn("WOW.js cannot detect dom mutations, please call .sync() after loading new content."))}function f(){n(this,f),this.keys=[],this.values=[]}function d(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}e.default=a,t.exports=e.default});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
